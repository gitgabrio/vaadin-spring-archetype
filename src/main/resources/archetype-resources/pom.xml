<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <name>Vaadin Spring Model</name>
    <description>Vaadin + Spring Single Page application</description>
    <packaging>war</packaging>

    <developers>
        <developer>
            <name>Gabriele Cardosi</name>
            <email>gabriele.cardosi@gmail.com</email>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <!-- LIBRARIES -->
        <vaadin.version>7.6.3</vaadin.version>
        <spring.framework.version>4.2.6.RELEASE</spring.framework.version>
        <vaadin-spring.framework.version>1.0.0</vaadin-spring.framework.version>
        <guava.version>19.0</guava.version>
        <log4j.version>1.2.17</log4j.version>
        <aspectj.version>1.8.9</aspectj.version>
        <javax.servlet.version>3.1.0</javax.servlet.version>
        <!-- TEST -->
        <junit.version>4.12</junit.version>
        <!-- PLUGINS -->
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <maven-war-plugin.version>2.4</maven-war-plugin.version>
        <maven-clean-plugin.version>2.4.1</maven-clean-plugin.version>
        <vaadin-plugin.version>7.3.3</vaadin-plugin.version>
        <tomcat-maven-plugin.version>2.2</tomcat-maven-plugin.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <jetty-maven-plugin.version>8.1.16.v20140903</jetty-maven-plugin.version>
        <!-- CONFIGURATIONs -->
        <!--<gwt.port>8080</gwt.port>-->
        <!--<gwt.debug.port>8000</gwt.debug.port>-->
        <!--<gwt.compiler.precompile>true</gwt.compiler.precompile>-->
        <!--<gwt.compiler.localWorkers>3</gwt.compiler.localWorkers>-->
        <!--<gwt.compiler.style>PRETTY</gwt.compiler.style>-->
        <!--<gwt.compiler.optimizationLevel>3</gwt.compiler.optimizationLevel>-->
        <!--<gwt.compiler.logLevel>WARN</gwt.compiler.logLevel>-->
        <!--<gwt.compiler.disableCastChecking>false</gwt.compiler.disableCastChecking>-->
        <!--<gwt.compiler.disableClassMetadata>false</gwt.compiler.disableClassMetadata>-->
        <!--<gwt.compiler.bindAddress>0.0.0.0</gwt.compiler.bindAddress>-->
        <!--<gwt.noserver>true</gwt.noserver>       &lt;!&ndash; set true to use remote tomcat instead of internal  Jetty &ndash;&gt;-->
        <!--<gwt.target>/GWTSpringModel/index.html</gwt.target>-->
        <maven-compiler.source>1.7</maven-compiler.source>
        <maven-compiler.target>1.7</maven-compiler.target>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring</artifactId>
            <version>${vaadin-spring.framework.version}</version>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
        <!--
  Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).

  For widgetset compilation, vaadin-client-compiler is automatically added on the
  compilation classpath by vaadin-maven-plugin so normally there is no need for an
  explicit dependency.
-->
        <!--
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiler</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
            <version>${vaadin.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.framework.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.framework.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.framework.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.framework.version}</version>
        </dependency>
        <!-- AspectJ dependencies -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <!--<dependencyManagement>-->
    <!--<dependencies>-->
    <!--&lt;!&ndash;<dependency>&ndash;&gt;-->
    <!--&lt;!&ndash;<groupId>com.vaadin</groupId>&ndash;&gt;-->
    <!--&lt;!&ndash;<artifactId>vaadin-bom</artifactId>&ndash;&gt;-->
    <!--&lt;!&ndash;<version>${vaadin.version}</version>&ndash;&gt;-->
    <!--&lt;!&ndash;<type>pom</type>&ndash;&gt;-->
    <!--&lt;!&ndash;<scope>import</scope>&ndash;&gt;-->
    <!--&lt;!&ndash;</dependency>&ndash;&gt;-->

    <!--</dependencies>-->
    <!--</dependencyManagement>-->

    <build>
        <!-- Output classes directly into the webapp, so that IDEs and "mvn process-classes" update them in DevMode -->
        <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
        <resources>
            <resource>
                <directory>src/main/config</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</targetPath>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.drl</include>
                    <include>**/*.png</include>
                    <include>**/*.jpg</include>
                    <include>**/*.jpeg</include>
                    <include>**/*.gif</include>
                    <include>**/*.css</include>
                    <include>**/*.sql</include>
                </includes>
                <targetPath>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</targetPath>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
                <targetPath>${project.build.directory}/${project.build.finalName}</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${tomcat-maven-plugin.version}</version>
                <!--<configuration>
                    &lt;!&ndash; add the security credentials to ~/.m2/settings.xml <id>...</id> &ndash;&gt;
                    <server>maven-tomcat</server>
                    <path>${tomcat.path}</path>
                    <url>${tomcat.server.url}</url>
                    <update>true</update>
                </configuration>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>-->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven-compiler.source}</source>
                    <target>${maven-compiler.target}</target>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <configuration>
                    <warSourceDirectory>src/main/webapp</warSourceDirectory>
                    <warName>VaadinSpringModel</warName>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/VAADIN/widgetsets</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin-plugin.version}</version>
                <configuration>
                    <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                    <!-- <runTarget>mobilemail</runTarget> -->
                    <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This
                        way compatible with Vaadin eclipse plugin. -->
                    <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets</webappDirectory>
                    <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets</hostedWebapp>
                    <noServer>true</noServer>
                    <!-- Remove draftCompile when project is ready -->
                    <draftCompile>false</draftCompile>
                    <compileReport>true</compileReport>
                    <style>OBF</style>
                    <strict>true</strict>
                    <runTarget>http://localhost:5000/</runTarget>
                </configuration>
                <executions>
                    <execution>
                        <configuration></configuration>
                        <goals>
                            <goal>clean</goal>
                            <goal>resources</goal>
                            <goal>update-theme</goal>
                            <goal>update-widgetset</goal>
                            <goal>compile-theme</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty-maven-plugin.version}</version>
            </plugin>
        </plugins>
    </build>


</project>
